
  <style>
    #world {
      position: absolute;
      width: 100%;
      height: 100%;
      top:0;
      left:0;
      overflow: hidden;
      background:#35404F;
      transition: background 400ms ease-in-out;
    }

    .overlay{
      position: absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
      background:rgba(0,0,0,0);
      position: none;
    }

    .name{
      color:white;
      font-size:20px;
    }

      .f{
        color:white;
        float:left;
      }
      .s{
        color:white;

        float:right;
      }


  </style>


<div id="world"></div>
<div class = "overlay">
  <p id="notice"><%= notice %></p>

  <p class = "f"><%= @gameroom.users.first.email %></p>
  <p class = "s"><%= @gameroom.users.second.email %></p>

</div>

<script>

    $(window).on("load",()=>{init();});

    let Colors = {
        red:0xf25346,
        white:0xd8d0d1,
        brown:0x59332e,
        pink:0xF5986E,
        neon:0xFF ,
        brownDark:0x23190f,
        blue:0x68c3c0,
    };
    let init = ()=> {
        createScene();
        createLights();
        createPlane();
        createBullet();
        createSea();
        createSky();
        document.addEventListener('mousemove',handleMouseMove, false);
        loop();
    };

    var mousePos = {x:0,y:0};

    function handleMouseMove(event){
        var tx = -1 + (event.clientX / WIDTH)*2;
        var ty = 1 - (event.clientY / HEIGHT)*2;
        mousePos = {x:tx,y:ty};
    }

    let scene, camera, fieldOfView, aspectRatio, nearPlane, farPlane, HEIGHT, WIDTH,
        renderer,container,hemisphereLight, shadowLight;;

    let createScene = () => {
        HEIGHT = window.innerHeight;
        WIDTH = window.innerWidth;
        scene = new THREE.Scene();

        scene.fog = new THREE.Fog(Colors.blue, 100, 950);

        aspectRatio = WIDTH / HEIGHT;
        fieldOfView = 60;
        nearPlane = 1;
        farPlane = 10000;

        camera = new THREE.PerspectiveCamera(
            fieldOfView,aspectRatio,nearPlane,farPlane
        );

        camera.position.x = 0;
        camera.position.z = 200;
        camera.position.y = 100;

        renderer = new THREE.WebGLRenderer({
            alpha: true,
            antialias: true
        });

        renderer.setSize(WIDTH,HEIGHT);

        renderer.shadowMap.enabled = true;

        container = document.getElementById("world");

        container.appendChild(renderer.domElement);

        window.addEventListener('resize',handleWindowResize,false);
    };

    function handleWindowResize(){
        HEIGHT = window.innerHeight;
        WIDTH = window.innerWidth;
        renderer.setSize(WIDTH,HEIGHT);
        camera.aspect= WIDTH/HEIGHT;
        camera.updateProjectionMatrix()

    }

    let createLights = () => {
        hemisphereLight = new THREE.HemisphereLight(0xaaaaaa,0x000000, .9);
        shadowLight = new THREE.DirectionalLight(0xffffff, .9);
        shadowLight.position.set(150,350,350);
        shadowLight.castShadow = true;
        shadowLight.shadow.camera.left = -400;
        shadowLight.shadow.camera.right = 400;
        shadowLight.shadow.camera.top = 400;
        shadowLight.shadow.camera.bottom = -400;
        shadowLight.shadow.camera.near = 1;
        shadowLight.shadow.camera.far = 10000;
        shadowLight.shadow.mapSize.width = 2048;
        shadowLight.shadow.mapSize.height = 2048;

        scene.add(hemisphereLight);
        scene.add(shadowLight);
    };

    Sea = function() {
        var geom = new THREE.CylinderGeometry(600,600,800,40,10);
        geom.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));

        var mat = new THREE.MeshPhongMaterial({
            color:Colors.blue,
            transparent: true,
            opacity: .6,
            shading: THREE.FlatShading,
        });

        this.mesh = new THREE.Mesh(geom, mat);
        this.mesh.receiveShadow = true;
    };

    var sea;

    function createSea(){
        sea = new Sea();
        sea.mesh.position.y = -600;
        scene.add(sea.mesh);
    }

    Cloud = function () {
        this.mesh = new THREE.Object3D();
        var geom = new THREE.BoxGeometry(Math.floor(Math.random() * (100 - 50)) + 50,.6,.6);
        var mat = new THREE.MeshPhongMaterial({
            color:Colors.neon
        });
        var nBlocs = 30+Math.floor(Math.random()*30);
        for(var i=0;i<nBlocs;i++){
            var m = new THREE.Mesh(geom,mat);
            m.position.x = i*55;
            m.position.y = Math.random()*20;
            m.position.z = Math.random()*100;
            m.rotation.z = Math.random()*Math.PI*100;
            m.rotation.y = Math.random()*Math.PI*20;

            var s = .1 + Math.random()*.9;
            m.scale.set(s,s,s);
            m.castShadow = true;
            m.receiveShadow = true;
            this.mesh.add(m);
        }
    };

    Sky = function(){
        this.mesh = new THREE.Object3D();

        this.nClouds = 20;
        var stepAngle = Math.PI*2/this.nClouds;

        for(var i =0;i<this.nClouds;i++){
            var c = new Cloud();
            var a = stepAngle*i;
            var h = 750+Math.random()*200;
            c.mesh.position.y = Math.sin(a)*h;
            c.mesh.position.x = Math.cos(a)*h;
            c.mesh.rotation.z = a + Math.PI/2;
            c.mesh.position.z = -400-Math.random()*400;
            var s = 1+Math.random()*2;
            c.mesh.scale.set(s,s,s);
            this.mesh.add(c.mesh);
        }
    };

    var sky;

    function createSky(){
        sky = new Sky();
        sky.mesh.position.y = -600;
        scene.add(sky.mesh);
    }


    var AirPlane = function() {

        this.mesh = new THREE.Object3D();

        // Create the cabin
        var geomCockpit = new THREE.BoxGeometry(60,50,50,1,1,1);
        var matCockpit = new THREE.MeshPhongMaterial({color:Colors.red, shading:THREE.FlatShading});
        var cockpit = new THREE.Mesh(geomCockpit, matCockpit);
        cockpit.castShadow = true;
        cockpit.receiveShadow = true;
        this.mesh.add(cockpit);

        // Create the engine
        var geomEngine = new THREE.BoxGeometry(20,50,50,1,1,1);
        var matEngine = new THREE.MeshPhongMaterial({color:Colors.white, shading:THREE.FlatShading});
        var engine = new THREE.Mesh(geomEngine, matEngine);
        engine.position.x = 40;
        engine.castShadow = true;
        engine.receiveShadow = true;
        this.mesh.add(engine);

        // Create the tail
        var geomTailPlane = new THREE.BoxGeometry(15,20,5,1,1,1);
        var matTailPlane = new THREE.MeshPhongMaterial({color:Colors.red, shading:THREE.FlatShading});
        var tailPlane = new THREE.Mesh(geomTailPlane, matTailPlane);
        tailPlane.position.set(-35,25,0);
        tailPlane.castShadow = true;
        tailPlane.receiveShadow = true;
        this.mesh.add(tailPlane);

        // Create the wing
        var geomSideWing = new THREE.BoxGeometry(40,8,150,1,1,1);
        var matSideWing = new THREE.MeshPhongMaterial({color:Colors.red, shading:THREE.FlatShading});
        var sideWing = new THREE.Mesh(geomSideWing, matSideWing);
        sideWing.castShadow = true;
        sideWing.receiveShadow = true;
        this.mesh.add(sideWing);

        // propeller
        var geomPropeller = new THREE.BoxGeometry(20,10,10,1,1,1);
        var matPropeller = new THREE.MeshPhongMaterial({color:Colors.brown, shading:THREE.FlatShading});
        this.propeller = new THREE.Mesh(geomPropeller, matPropeller);
        this.propeller.castShadow = true;
        this.propeller.receiveShadow = true;

        // blades
        var geomBlade = new THREE.BoxGeometry(1,100,20,1,1,1);
        var matBlade = new THREE.MeshPhongMaterial({color:Colors.brownDark, shading:THREE.FlatShading});

        var blade = new THREE.Mesh(geomBlade, matBlade);
        blade.position.set(8,0,0);
        blade.castShadow = true;
        blade.receiveShadow = true;
        this.propeller.add(blade);
        this.propeller.position.set(50,0,0);
        this.mesh.add(this.propeller);
    };



    var Bullet = function() {

        this.mesh = new THREE.Object3D();

        // Create the cabin
        var geomCockpit = new THREE.BoxGeometry(60,50,50,1,1,1);
        var matCockpit = new THREE.MeshPhongMaterial({color:Colors.red, shading:THREE.FlatShading});
        var cockpit = new THREE.Mesh(geomCockpit, matCockpit);
        cockpit.castShadow = true;
        cockpit.receiveShadow = true;
        this.mesh.add(cockpit);

        // Create the engine
        var geomEngine = new THREE.BoxGeometry(20,50,50,1,1,1);
        var matEngine = new THREE.MeshPhongMaterial({color:Colors.white, shading:THREE.FlatShading});
        var engine = new THREE.Mesh(geomEngine, matEngine);
        engine.position.x = 40;
        engine.castShadow = true;
        engine.receiveShadow = true;
        this.mesh.add(engine);

        // Create the tail

    };

    bullet;


    function createBullet(){
        bullet = new Bullet();

        bullet.mesh.position.y = 100;
        bullet.mesh.scale.set(.25,.25,.25);
        scene.add(bullet.mesh);

    }


    var airplane;

    function createPlane(){
        airplane = new AirPlane();
        airplane.mesh.scale.set(.25,.25,.25);
        airplane.mesh.position.y= 100;
        scene.add(airplane.mesh);


        airplane2 = new AirPlane();
        airplane2.mesh.scale.set(.25,.25,.25);
        airplane2.mesh.position.y = 100;
        airplane2.mesh.rotateY(160);
        scene.add(airplane2.mesh);


    }

    function updatePlane(){
        var targetX = normalize(mousePos.x, -1, 1, -200, 100);
        var targetY = normalize(mousePos.y, -1, 1, 25, 175);

        var targetX2 = normalize(mousePos.x, -1, 1, -200, 220);
        var targetY2 = normalize(mousePos.y, -1, 1, 25, 175);

        <% if @gameroom.users.first.email == current_user.email %>
          airplane.mesh.position.y = targetY;
          airplane.mesh.position.x = targetX;
        <% end %>

        <% if @gameroom.users.second.email == current_user.email %>
          airplane2.mesh.position.y = targetY2;
          airplane2.mesh.position.x = targetX2;
        <% end %>


        airplane.propeller.rotation.x += 0.3;

        airplane2.propeller.rotation.x += 0.3;

    }

    function updateBullet(){
        var targetX = normalize(mousePos.x, -1, 1, -200, 100);
        var targetY = normalize(mousePos.y, -1, 1, 25, 175);

        bullet.mesh.position.y = targetY;




    }

    function normalize(v,vmin,vmax,tmin,tmax){
        var nv = Math.max(Math.min(v,vmax), vmin);
        var dv = vmax-vmin;
        var pc = (nv-vmin)/dv;
        var dt = tmax-tmin;
        var tv = tmin+(pc*dt);
        return tv;
    }

    function moveBullet(){
        setInterval(function(){
            bullet.mesh.position.x += 1;

        },20);
    }

    function loop(){

        sea.mesh.rotation.z += .005;
        sky.mesh.rotation.z += .01;
        updatePlane();
        updateBullet();
        $(window).keypress(()=>{
            createBullet();
            moveBullet();


        });
        renderer.render(scene,camera);
        requestAnimationFrame(loop);
    }

</script>
